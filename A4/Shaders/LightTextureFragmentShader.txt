#version 420

in vec2 TexCoords;
out vec4 colour;

uniform sampler2D texture_diffuse1;

in vec4 FragPos;  
in vec4 Normal;  
  
vec4 lightPosition = vec4(5.0f, 5.0f, 5.0f, 0.0f); 
uniform vec4 viewPosition;
vec4 lightColour = vec4(1.0f, 1.0f, 1.0f, 1.0f);

void main()
{
    vec4 objectColour = vec4(texture(texture_diffuse1, TexCoords));

	 // Ambient
    float ambientStrength = 0.5f;
    vec4 ambient = ambientStrength * lightColour;
  	
    // Diffuse 
    vec4 norm = normalize(Normal);
    vec4 lightDir = normalize(lightPosition - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec4 diffuse = diff * lightColour;
    
    // Specular
    float specularStrength = 0.9f;
    vec4 viewDir = normalize(viewPosition - FragPos);
    vec4 reflectDir = reflect(-lightDir, norm);  
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 256);
    vec4 specular = specularStrength * spec * lightColour;  
        
    vec4 result = (ambient + diffuse + specular) * objectColour;
    colour = result;
	//colour = (ambient + diffuse) * objectColour;
} 